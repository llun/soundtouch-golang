// Code generated by go-swagger; DO NOT EDIT.

package key

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/theovassiliou/soundtouch-golang/server/models"
)

// PresetsOKCode is the HTTP code returned for type PresetsOK
const PresetsOKCode int = 200

/*PresetsOK a JSON A JSON object describing the presets. Returns information both in Standby and PoweredOn mode

swagger:response presetsOK
*/
type PresetsOK struct {

	/*
	  In: Body
	*/
	Payload models.BObject `json:"body,omitempty"`
}

// NewPresetsOK creates PresetsOK with default headers values
func NewPresetsOK() *PresetsOK {

	return &PresetsOK{}
}

// WithPayload adds the payload to the presets o k response
func (o *PresetsOK) WithPayload(payload models.BObject) *PresetsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the presets o k response
func (o *PresetsOK) SetPayload(payload models.BObject) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PresetsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*PresetsDefault generic error response

swagger:response presetsDefault
*/
type PresetsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPresetsDefault creates PresetsDefault with default headers values
func NewPresetsDefault(code int) *PresetsDefault {
	if code <= 0 {
		code = 500
	}

	return &PresetsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the presets default response
func (o *PresetsDefault) WithStatusCode(code int) *PresetsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the presets default response
func (o *PresetsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the presets default response
func (o *PresetsDefault) WithPayload(payload *models.Error) *PresetsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the presets default response
func (o *PresetsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PresetsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
