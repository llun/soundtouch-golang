// Code generated by go-swagger; DO NOT EDIT.

package key

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/theovassiliou/soundtouch-golang/server/models"
)

// PowerOffOKCode is the HTTP code returned for type PowerOffOK
const PowerOffOKCode int = 200

/*PowerOffOK The returned status will be true if the SoundTouch is turned off. The returned status will be false if the SoundTouch was already turned off.

swagger:response powerOffOK
*/
type PowerOffOK struct {

	/*
	  In: Body
	*/
	Payload *models.BStatus `json:"body,omitempty"`
}

// NewPowerOffOK creates PowerOffOK with default headers values
func NewPowerOffOK() *PowerOffOK {

	return &PowerOffOK{}
}

// WithPayload adds the payload to the power off o k response
func (o *PowerOffOK) WithPayload(payload *models.BStatus) *PowerOffOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the power off o k response
func (o *PowerOffOK) SetPayload(payload *models.BStatus) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PowerOffOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PowerOffDefault generic error response

swagger:response powerOffDefault
*/
type PowerOffDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPowerOffDefault creates PowerOffDefault with default headers values
func NewPowerOffDefault(code int) *PowerOffDefault {
	if code <= 0 {
		code = 500
	}

	return &PowerOffDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the power off default response
func (o *PowerOffDefault) WithStatusCode(code int) *PowerOffDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the power off default response
func (o *PowerOffDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the power off default response
func (o *PowerOffDefault) WithPayload(payload *models.Error) *PowerOffDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the power off default response
func (o *PowerOffDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PowerOffDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
