// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/theovassiliou/soundtouch-golang/server/models"
)

// KeysListOKCode is the HTTP code returned for type KeysListOK
const KeysListOKCode int = 200

/*KeysListOK a JSON object with all key literals.

swagger:response keysListOK
*/
type KeysListOK struct {

	/*
	  In: Body
	*/
	Payload models.Keys `json:"body,omitempty"`
}

// NewKeysListOK creates KeysListOK with default headers values
func NewKeysListOK() *KeysListOK {

	return &KeysListOK{}
}

// WithPayload adds the payload to the keys list o k response
func (o *KeysListOK) WithPayload(payload models.Keys) *KeysListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the keys list o k response
func (o *KeysListOK) SetPayload(payload models.Keys) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *KeysListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = models.Keys{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*KeysListDefault generic error response

swagger:response keysListDefault
*/
type KeysListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewKeysListDefault creates KeysListDefault with default headers values
func NewKeysListDefault(code int) *KeysListDefault {
	if code <= 0 {
		code = 500
	}

	return &KeysListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the keys list default response
func (o *KeysListDefault) WithStatusCode(code int) *KeysListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the keys list default response
func (o *KeysListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the keys list default response
func (o *KeysListDefault) WithPayload(payload *models.Error) *KeysListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the keys list default response
func (o *KeysListDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *KeysListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
